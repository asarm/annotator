{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* FileSaver.js\r\n * A saveAs() FileSaver implementation.\r\n *\r\n * By Eli Grey, http://eligrey.com\r\n * ES6ified by Cole Chamberlain, https://github.com/cchamberlain\r\n *\r\n * License: MIT\r\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\r\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = exports.saveAs = window.saveAs || function (view) {\n  // IE <10 is explicitly unsupported\n  if (typeof navigator !== 'undefined' && /MSIE [1-9]\\./.test(navigator.userAgent)) return;\n  var doc = view.document;\n  // only get URL when necessary in case Blob.js hasn't overridden it yet\n  var get_URL = function get_URL() {\n    return view.URL || view.webkitURL || view;\n  };\n  var save_link = doc.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n  var can_use_save_link = ('download' in save_link);\n  var click = function click(node) {\n    var event = new MouseEvent('click');\n    node.dispatchEvent(event);\n  };\n  var is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent);\n  var webkit_req_fs = view.webkitRequestFileSystem;\n  var req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem;\n  var throw_outside = function throw_outside(ex) {\n    (view.setImmediate || view.setTimeout)(function () {\n      throw ex;\n    }, 0);\n  };\n  var force_saveable_type = 'application/octet-stream';\n  var fs_min_size = 0;\n  // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n  var arbitrary_revoke_timeout = 1000 * 40; // in ms\n  var revoke = function revoke(file) {\n    var revoker = function revoker() {\n      if (typeof file === 'string')\n        // file is an object URL\n        get_URL().revokeObjectURL(file);else\n        // file is a File\n        file.remove();\n    };\n    /* // Take note W3C:\r\n    var\r\n      uri = typeof file === \"string\" ? file : file.toURL()\r\n    , revoker = function(evt) {\r\n      // idealy DownloadFinishedEvent.data would be the URL requested\r\n      if (evt.data === uri) {\r\n        if (typeof file === \"string\") { // file is an object URL\r\n          get_URL().revokeObjectURL(file);\r\n        } else { // file is a File\r\n          file.remove();\r\n        }\r\n      }\r\n    }\r\n    ;\r\n    view.addEventListener(\"downloadfinished\", revoker);\r\n    */\n    setTimeout(revoker, arbitrary_revoke_timeout);\n  };\n  var dispatch = function dispatch(filesaver, event_types, event) {\n    event_types = [].concat(event_types);\n    var i = event_types.length;\n    while (i--) {\n      var listener = filesaver['on' + event_types[i]];\n      if (typeof listener === 'function') {\n        try {\n          listener.call(filesaver, event || filesaver);\n        } catch (ex) {\n          throw_outside(ex);\n        }\n      }\n    }\n  };\n  var auto_bom = function auto_bom(blob) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) return new Blob(['ï»¿', blob], {\n      type: blob.type\n    });\n    return blob;\n  };\n  var FileSaver = function FileSaver(blob, name, no_auto_bom) {\n    _classCallCheck(this, FileSaver);\n    if (!no_auto_bom) blob = auto_bom(blob);\n    // First try a.download, then web filesystem, then object URLs\n    var filesaver = this,\n      type = blob.type,\n      blob_changed = false,\n      object_url,\n      target_view,\n      dispatch_all = function dispatch_all() {\n        dispatch(filesaver, 'writestart progress write writeend'.split(' '));\n      }\n      // on any filesys errors revert to saving with object URLs\n      ,\n      fs_error = function fs_error() {\n        if (target_view && is_safari && typeof FileReader !== 'undefined') {\n          // Safari doesn't allow downloading of blob urls\n          var reader = new FileReader();\n          reader.onloadend = function () {\n            var base64Data = reader.result;\n            target_view.location.href = 'data:attachment/file' + base64Data.slice(base64Data.search(/[,;]/));\n            filesaver.readyState = filesaver.DONE;\n            dispatch_all();\n          };\n          reader.readAsDataURL(blob);\n          filesaver.readyState = filesaver.INIT;\n          return;\n        }\n        // don't create more object URLs than needed\n        if (blob_changed || !object_url) {\n          object_url = get_URL().createObjectURL(blob);\n        }\n        if (target_view) {\n          target_view.location.href = object_url;\n        } else {\n          var new_tab = view.open(object_url, '_blank');\n          if (new_tab === undefined && is_safari) {\n            //Apple do not allow window.open, see http://bit.ly/1kZffRI\n            view.location.href = object_url;\n          }\n        }\n        filesaver.readyState = filesaver.DONE;\n        dispatch_all();\n        revoke(object_url);\n      },\n      abortable = function abortable(func) {\n        return function () {\n          if (filesaver.readyState !== filesaver.DONE) {\n            return func.apply(this, arguments);\n          }\n        };\n      },\n      create_if_not_found = {\n        create: true,\n        exclusive: false\n      },\n      slice;\n    filesaver.readyState = filesaver.INIT;\n    if (!name) {\n      name = 'download';\n    }\n    if (can_use_save_link) {\n      object_url = get_URL().createObjectURL(blob);\n      setTimeout(function () {\n        save_link.href = object_url;\n        save_link.download = name;\n        click(save_link);\n        dispatch_all();\n        revoke(object_url);\n        filesaver.readyState = filesaver.DONE;\n      });\n      return;\n    }\n    // Object and web filesystem URLs have a problem saving in Google Chrome when\n    // viewed in a tab, so I force save with application/octet-stream\n    // http://code.google.com/p/chromium/issues/detail?id=91158\n    // Update: Google errantly closed 91158, I submitted it again:\n    // https://code.google.com/p/chromium/issues/detail?id=389642\n    if (view.chrome && type && type !== force_saveable_type) {\n      slice = blob.slice || blob.webkitSlice;\n      blob = slice.call(blob, 0, blob.size, force_saveable_type);\n      blob_changed = true;\n    }\n    // Since I can't be sure that the guessed media type will trigger a download\n    // in WebKit, I append .download to the filename.\n    // https://bugs.webkit.org/show_bug.cgi?id=65440\n    if (webkit_req_fs && name !== 'download') {\n      name += '.download';\n    }\n    if (type === force_saveable_type || webkit_req_fs) {\n      target_view = view;\n    }\n    if (!req_fs) {\n      fs_error();\n      return;\n    }\n    fs_min_size += blob.size;\n    req_fs(view.TEMPORARY, fs_min_size, abortable(function (fs) {\n      fs.root.getDirectory('saved', create_if_not_found, abortable(function (dir) {\n        var save = function save() {\n          dir.getFile(name, create_if_not_found, abortable(function (file) {\n            file.createWriter(abortable(function (writer) {\n              writer.onwriteend = function (event) {\n                target_view.location.href = file.toURL();\n                filesaver.readyState = filesaver.DONE;\n                dispatch(filesaver, 'writeend', event);\n                revoke(file);\n              };\n              writer.onerror = function () {\n                var error = writer.error;\n                if (error.code !== error.ABORT_ERR) {\n                  fs_error();\n                }\n              };\n              'writestart progress write abort'.split(' ').forEach(function (event) {\n                writer['on' + event] = filesaver['on' + event];\n              });\n              writer.write(blob);\n              filesaver.abort = function () {\n                writer.abort();\n                filesaver.readyState = filesaver.DONE;\n              };\n              filesaver.readyState = filesaver.WRITING;\n            }), fs_error);\n          }), fs_error);\n        };\n        dir.getFile(name, {\n          create: false\n        }, abortable(function (file) {\n          // delete file if it already exists\n          file.remove();\n          save();\n        }), abortable(function (ex) {\n          if (ex.code === ex.NOT_FOUND_ERR) {\n            save();\n          } else {\n            fs_error();\n          }\n        }));\n      }), fs_error);\n    }), fs_error);\n  };\n  var FS_proto = FileSaver.prototype;\n  var saveAs = function saveAs(blob, name, no_auto_bom) {\n    return new FileSaver(blob, name, no_auto_bom);\n  };\n\n  // IE 10+ (native saveAs)\n  if (typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob) {\n    return function (blob, name, no_auto_bom) {\n      if (!no_auto_bom) blob = auto_bom(blob);\n      return navigator.msSaveOrOpenBlob(blob, name || 'download');\n    };\n  }\n  FS_proto.abort = function () {\n    var filesaver = this;\n    filesaver.readyState = filesaver.DONE;\n    dispatch(filesaver, 'abort');\n  };\n  FS_proto.readyState = FS_proto.INIT = 0;\n  FS_proto.WRITING = 1;\n  FS_proto.DONE = 2;\n  FS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;\n  return saveAs;\n}(typeof self !== 'undefined' && self || typeof window !== 'undefined' && window || undefined.content);\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nexports.default = saveAs;","map":{"version":3,"names":["Object","defineProperty","exports","value","_classCallCheck","instance","Constructor","TypeError","saveAs","window","view","navigator","test","userAgent","doc","document","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","event","MouseEvent","dispatchEvent","is_safari","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","setTimeout","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","remove","dispatch","filesaver","event_types","concat","i","length","listener","call","auto_bom","blob","type","Blob","FileSaver","name","no_auto_bom","blob_changed","object_url","target_view","dispatch_all","split","fs_error","FileReader","reader","onloadend","base64Data","result","location","href","slice","search","readyState","DONE","readAsDataURL","INIT","createObjectURL","new_tab","open","undefined","abortable","func","apply","arguments","create_if_not_found","create","exclusive","download","chrome","webkitSlice","size","TEMPORARY","fs","root","getDirectory","dir","save","getFile","createWriter","writer","onwriteend","toURL","onerror","error","code","ABORT_ERR","forEach","write","abort","WRITING","NOT_FOUND_ERR","FS_proto","prototype","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","onabort","self","content","default"],"sources":["/Users/mertardaasar/Documents/code_projects/react_projects/annotator/node_modules/save-as/lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* FileSaver.js\r\n * A saveAs() FileSaver implementation.\r\n *\r\n * By Eli Grey, http://eligrey.com\r\n * ES6ified by Cole Chamberlain, https://github.com/cchamberlain\r\n *\r\n * License: MIT\r\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\r\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = exports.saveAs = window.saveAs || function (view) {\n  // IE <10 is explicitly unsupported\n  if (typeof navigator !== 'undefined' && /MSIE [1-9]\\./.test(navigator.userAgent)) return;\n  var doc = view.document;\n  // only get URL when necessary in case Blob.js hasn't overridden it yet\n  var get_URL = function get_URL() {\n    return view.URL || view.webkitURL || view;\n  };\n  var save_link = doc.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n  var can_use_save_link = 'download' in save_link;\n  var click = function click(node) {\n    var event = new MouseEvent('click');\n    node.dispatchEvent(event);\n  };\n  var is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent);\n  var webkit_req_fs = view.webkitRequestFileSystem;\n  var req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem;\n  var throw_outside = function throw_outside(ex) {\n    (view.setImmediate || view.setTimeout)(function () {\n      throw ex;\n    }, 0);\n  };\n  var force_saveable_type = 'application/octet-stream';\n  var fs_min_size = 0;\n  // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n  var arbitrary_revoke_timeout = 1000 * 40; // in ms\n  var revoke = function revoke(file) {\n    var revoker = function revoker() {\n      if (typeof file === 'string') // file is an object URL\n        get_URL().revokeObjectURL(file);else // file is a File\n        file.remove();\n    };\n    /* // Take note W3C:\r\n    var\r\n      uri = typeof file === \"string\" ? file : file.toURL()\r\n    , revoker = function(evt) {\r\n      // idealy DownloadFinishedEvent.data would be the URL requested\r\n      if (evt.data === uri) {\r\n        if (typeof file === \"string\") { // file is an object URL\r\n          get_URL().revokeObjectURL(file);\r\n        } else { // file is a File\r\n          file.remove();\r\n        }\r\n      }\r\n    }\r\n    ;\r\n    view.addEventListener(\"downloadfinished\", revoker);\r\n    */\n    setTimeout(revoker, arbitrary_revoke_timeout);\n  };\n  var dispatch = function dispatch(filesaver, event_types, event) {\n    event_types = [].concat(event_types);\n    var i = event_types.length;\n    while (i--) {\n      var listener = filesaver['on' + event_types[i]];\n      if (typeof listener === 'function') {\n        try {\n          listener.call(filesaver, event || filesaver);\n        } catch (ex) {\n          throw_outside(ex);\n        }\n      }\n    }\n  };\n  var auto_bom = function auto_bom(blob) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) return new Blob(['ï»¿', blob], { type: blob.type });\n    return blob;\n  };\n\n  var FileSaver = function FileSaver(blob, name, no_auto_bom) {\n    _classCallCheck(this, FileSaver);\n\n    if (!no_auto_bom) blob = auto_bom(blob);\n    // First try a.download, then web filesystem, then object URLs\n    var filesaver = this,\n        type = blob.type,\n        blob_changed = false,\n        object_url,\n        target_view,\n        dispatch_all = function dispatch_all() {\n      dispatch(filesaver, 'writestart progress write writeend'.split(' '));\n    }\n    // on any filesys errors revert to saving with object URLs\n    ,\n        fs_error = function fs_error() {\n      if (target_view && is_safari && typeof FileReader !== 'undefined') {\n        // Safari doesn't allow downloading of blob urls\n        var reader = new FileReader();\n        reader.onloadend = function () {\n          var base64Data = reader.result;\n          target_view.location.href = 'data:attachment/file' + base64Data.slice(base64Data.search(/[,;]/));\n          filesaver.readyState = filesaver.DONE;\n          dispatch_all();\n        };\n        reader.readAsDataURL(blob);\n        filesaver.readyState = filesaver.INIT;\n        return;\n      }\n      // don't create more object URLs than needed\n      if (blob_changed || !object_url) {\n        object_url = get_URL().createObjectURL(blob);\n      }\n      if (target_view) {\n        target_view.location.href = object_url;\n      } else {\n        var new_tab = view.open(object_url, '_blank');\n        if (new_tab === undefined && is_safari) {\n          //Apple do not allow window.open, see http://bit.ly/1kZffRI\n          view.location.href = object_url;\n        }\n      }\n      filesaver.readyState = filesaver.DONE;\n      dispatch_all();\n      revoke(object_url);\n    },\n        abortable = function abortable(func) {\n      return function () {\n        if (filesaver.readyState !== filesaver.DONE) {\n          return func.apply(this, arguments);\n        }\n      };\n    },\n        create_if_not_found = { create: true, exclusive: false },\n        slice;\n\n    filesaver.readyState = filesaver.INIT;\n    if (!name) {\n      name = 'download';\n    }\n    if (can_use_save_link) {\n      object_url = get_URL().createObjectURL(blob);\n      setTimeout(function () {\n        save_link.href = object_url;\n        save_link.download = name;\n        click(save_link);\n        dispatch_all();\n        revoke(object_url);\n        filesaver.readyState = filesaver.DONE;\n      });\n      return;\n    }\n    // Object and web filesystem URLs have a problem saving in Google Chrome when\n    // viewed in a tab, so I force save with application/octet-stream\n    // http://code.google.com/p/chromium/issues/detail?id=91158\n    // Update: Google errantly closed 91158, I submitted it again:\n    // https://code.google.com/p/chromium/issues/detail?id=389642\n    if (view.chrome && type && type !== force_saveable_type) {\n      slice = blob.slice || blob.webkitSlice;\n      blob = slice.call(blob, 0, blob.size, force_saveable_type);\n      blob_changed = true;\n    }\n    // Since I can't be sure that the guessed media type will trigger a download\n    // in WebKit, I append .download to the filename.\n    // https://bugs.webkit.org/show_bug.cgi?id=65440\n    if (webkit_req_fs && name !== 'download') {\n      name += '.download';\n    }\n    if (type === force_saveable_type || webkit_req_fs) {\n      target_view = view;\n    }\n    if (!req_fs) {\n      fs_error();\n      return;\n    }\n    fs_min_size += blob.size;\n    req_fs(view.TEMPORARY, fs_min_size, abortable(function (fs) {\n      fs.root.getDirectory('saved', create_if_not_found, abortable(function (dir) {\n        var save = function save() {\n          dir.getFile(name, create_if_not_found, abortable(function (file) {\n            file.createWriter(abortable(function (writer) {\n              writer.onwriteend = function (event) {\n                target_view.location.href = file.toURL();\n                filesaver.readyState = filesaver.DONE;\n                dispatch(filesaver, 'writeend', event);\n                revoke(file);\n              };\n              writer.onerror = function () {\n                var error = writer.error;\n                if (error.code !== error.ABORT_ERR) {\n                  fs_error();\n                }\n              };\n              'writestart progress write abort'.split(' ').forEach(function (event) {\n                writer['on' + event] = filesaver['on' + event];\n              });\n              writer.write(blob);\n              filesaver.abort = function () {\n                writer.abort();\n                filesaver.readyState = filesaver.DONE;\n              };\n              filesaver.readyState = filesaver.WRITING;\n            }), fs_error);\n          }), fs_error);\n        };\n        dir.getFile(name, { create: false }, abortable(function (file) {\n          // delete file if it already exists\n          file.remove();\n          save();\n        }), abortable(function (ex) {\n          if (ex.code === ex.NOT_FOUND_ERR) {\n            save();\n          } else {\n            fs_error();\n          }\n        }));\n      }), fs_error);\n    }), fs_error);\n  };\n\n  var FS_proto = FileSaver.prototype;\n  var saveAs = function saveAs(blob, name, no_auto_bom) {\n    return new FileSaver(blob, name, no_auto_bom);\n  };\n\n  // IE 10+ (native saveAs)\n  if (typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob) {\n    return function (blob, name, no_auto_bom) {\n      if (!no_auto_bom) blob = auto_bom(blob);\n      return navigator.msSaveOrOpenBlob(blob, name || 'download');\n    };\n  }\n\n  FS_proto.abort = function () {\n    var filesaver = this;\n    filesaver.readyState = filesaver.DONE;\n    dispatch(filesaver, 'abort');\n  };\n  FS_proto.readyState = FS_proto.INIT = 0;\n  FS_proto.WRITING = 1;\n  FS_proto.DONE = 2;\n\n  FS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;\n\n  return saveAs;\n}(typeof self !== 'undefined' && self || typeof window !== 'undefined' && window || undefined.content);\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nexports.default = saveAs;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}