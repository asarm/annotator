{"ast":null,"code":"var _jsxFileName = \"/Users/mertardaasar/Documents/code_projects/react_projects/annotator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useEffect } from 'react';\nimport { saveAs } from 'save-as';\nimport Highlighter from \"react-highlight-words\";\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jsonData, setJsonData] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentQ, setCurrentQ] = useState(0);\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newAnswer, setNewAnswer] = useState('');\n\n  // create a variable that allows user to upload a JSON file and targets the object \"data\"\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        setJsonData(JSON.parse(event.target.result)[\"data\"]);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  // download the updated data in JSON format\n  const handleDownloadData = () => {\n    const file = new Blob([JSON.stringify({\n      data: jsonData\n    }, null, 2)], {\n      type: 'text/plain'\n    });\n    saveAs(file, 'data.json');\n  };\n  const handlePrevClick = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n  const handleNextClick = () => {\n    if (currentIndex < jsonData.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  // allows user to edit the question\n  const changeQuestion = id => {\n    const q_input = prompt('Please write your question');\n    const newJsonData = [...jsonData];\n    const text = newJsonData[currentIndex].qas.find(q => q.id === id);\n    text.question = q_input; // update the question\n    setJsonData(newJsonData);\n  };\n\n  // allows user to edit the answer\n  // id: text id to be edited, signal: edit type ( 1=> from prompt, 0 => by using mouse)\n  const handleAnswerEdit = (id, signal) => {\n    setCurrentQ(id);\n    let a_input;\n    if (signal == 1) {\n      a_input = prompt('Enter the answer');\n    } else {\n      a_input = window.getSelection().toString();\n    }\n    const newJsonData = [...jsonData];\n    const text = newJsonData[currentIndex].qas.find(text => text.id === id); // find the corresponding text by id\n\n    text.answer = a_input; // update the answer\n\n    setJsonData(newJsonData);\n  };\n\n  // different colors for different answers\n  const colors = [\"#ffc107\", \"#17a2b8\", \"#28a745\", \"#dc3545\", \"#6c757d\", \"#60329F\", \"#71FF1E\", \"#EAFF1E\"];\n\n  // update the indices of the answers\n  const setIndices = jsonData => {\n    const answers = jsonData[currentIndex].qas.map(q => q.answer);\n    const searchWords = answers.map((answer, index) => {\n      // start and end index of the answer\n      const startIndex = jsonData[currentIndex].context.indexOf(answer);\n      const endIndex = startIndex + answer.length;\n\n      // Update start and end indices\n      jsonData[currentIndex].qas[index].answer_start = startIndex;\n      jsonData[currentIndex].qas[index].answer_end = endIndex;\n    });\n  };\n  // highlight the answers in the context using the indices\n  const highlightAnswers = jsonData => {\n    setIndices(jsonData);\n    const context = jsonData[currentIndex].context;\n    const spans = context.split('').map((char, index) => {\n      let style = {};\n\n      // Check if the character is part of an answer\n      const qa = jsonData[currentIndex].qas.find(qa => qa.answer_start <= index && index <= qa.answer_end);\n      if (qa) {\n        // Set the highlight color based on the answer's id\n        style.backgroundColor = colors[qa.id % colors.length];\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: style,\n        children: char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: spans\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Delete a QA\n  const handleDelete = index => {\n    const newJsonData = [...jsonData];\n    newJsonData[currentIndex].qas.splice(index, 1);\n    for (let i = 0; i < newJsonData[currentIndex].qas.length; i++) {\n      if (newJsonData[currentIndex].qas[i].id !== i) {\n        newJsonData[currentIndex].qas.forEach((qa, index) => {\n          qa.id = index;\n        });\n        setJsonData(newJsonData);\n        break;\n      }\n    }\n    setJsonData(newJsonData);\n  };\n  // Add a new QA\n  const handleAddQuestion = e => {\n    e.preventDefault(); // prevent the form from reloading the page\n\n    const newJsonData = [...jsonData];\n    const newId = newJsonData[currentIndex].qas.length; // next available id\n\n    const newQA = {\n      id: newId,\n      question: newQuestion,\n      answer_start: 0,\n      answer_end: newAnswer.length,\n      answer: newAnswer\n    };\n\n    // add the new QA to the current context\n    newJsonData[currentIndex].qas.push(newQA);\n    setJsonData(newJsonData); // update the jsonData \n    setNewQuestion(''); // reset form\n    setNewAnswer(''); // reset form\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QA Annotation Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload the data in JSON format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadData,\n      variant: \"contained\",\n      children: \"Download Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddQuestion,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Question:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newQuestion,\n          onChange: e => setNewQuestion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Answer:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newAnswer,\n          onChange: e => setNewAnswer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), jsonData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 75\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: jsonData[currentIndex].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: highlightAnswers(jsonData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: jsonData[currentIndex].qas.map((text, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [console.log(index), \"Question: \", text.question, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeQuestion(text.id, 1),\n              style: {\n                marginLeft: \"15px\"\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Answer: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: colors[index]\n              },\n              children: text.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAnswerEdit(text.id, 1),\n              style: {\n                marginLeft: \"15px\"\n              },\n              children: [\"Edit \", text.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAnswerEdit(text.id, 0),\n              children: \"Edit by select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevClick,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextClick,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FWMZvNW/G5xUC72iL+sPNap73qo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","saveAs","Highlighter","Button","App","jsonData","setJsonData","currentIndex","setCurrentIndex","currentQ","setCurrentQ","newQuestion","setNewQuestion","newAnswer","setNewAnswer","handleFileSelect","event","file","target","files","reader","FileReader","onload","JSON","parse","result","readAsText","handleDownloadData","Blob","stringify","data","type","handlePrevClick","handleNextClick","length","changeQuestion","id","q_input","prompt","newJsonData","text","qas","find","q","question","handleAnswerEdit","signal","a_input","window","getSelection","toString","answer","colors","setIndices","answers","map","searchWords","index","startIndex","context","indexOf","endIndex","answer_start","answer_end","highlightAnswers","spans","split","char","style","qa","backgroundColor","handleDelete","splice","i","forEach","handleAddQuestion","e","preventDefault","newId","newQA","push","margin","value","title","console","log","marginLeft"],"sources":["/Users/mertardaasar/Documents/code_projects/react_projects/annotator/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useEffect } from 'react';\nimport { saveAs} from 'save-as';\nimport Highlighter from \"react-highlight-words\";\nimport Button from '@mui/material/Button';\n\n\nfunction App() {\n  const [jsonData, setJsonData] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentQ, setCurrentQ] = useState(0);\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newAnswer, setNewAnswer] = useState('');\n\n\n\n  // create a variable that allows user to upload a JSON file and targets the object \"data\"\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = (event) => {\n        setJsonData(JSON.parse(event.target.result)[\"data\"]);\n      };\n\n      reader.readAsText(file);\n    }\n  };\n\n   // download the updated data in JSON format\n   const handleDownloadData = () => {\n    const file = new Blob([JSON.stringify({data: jsonData}, null, 2)], {type: 'text/plain'});\n    saveAs(file, 'data.json');\n  };\n\n\n  const handlePrevClick = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (currentIndex < jsonData.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n\n  // allows user to edit the question\n  const changeQuestion = (id) => {\n    const q_input = prompt('Please write your question');\n    const newJsonData = [...jsonData];\n    const text = newJsonData[currentIndex].qas.find(q => q.id === id);\n    text.question = q_input; // update the question\n    setJsonData(newJsonData);\n  };\n\n  // allows user to edit the answer\n  // id: text id to be edited, signal: edit type ( 1=> from prompt, 0 => by using mouse)\n  const handleAnswerEdit = (id, signal) => {\n    setCurrentQ(id);\n    let a_input;\n    \n    if (signal == 1) {\n      a_input = prompt('Enter the answer')\n    }else {\n      a_input = window.getSelection().toString()\n    }\n\n    const newJsonData = [...jsonData];\n    const text = newJsonData[currentIndex].qas.find(text => text.id === id); // find the corresponding text by id\n \n    text.answer = a_input; // update the answer\n    \n    setJsonData(newJsonData);\n  };\n\n  \n  // different colors for different answers\n  const colors = [\"#ffc107\", \"#17a2b8\", \"#28a745\", \"#dc3545\", \"#6c757d\", \"#60329F\", \"#71FF1E\", \"#EAFF1E\"];\n  \n  // update the indices of the answers\n  const setIndices = (jsonData) => {\n    const answers = jsonData[currentIndex].qas.map((q) => q.answer);\n  \n    \n    const searchWords = answers.map((answer, index) => {\n      // start and end index of the answer\n      const startIndex = jsonData[currentIndex].context.indexOf(answer);\n      const endIndex = startIndex + answer.length;\n  \n      // Update start and end indices\n      jsonData[currentIndex].qas[index].answer_start = startIndex;\n      jsonData[currentIndex].qas[index].answer_end = endIndex;\n    });\n\n  };\n  // highlight the answers in the context using the indices\n  const highlightAnswers = (jsonData) => {\n    setIndices(jsonData);  \n    const context = jsonData[currentIndex].context; \n    const spans = context.split('').map((char, index) => {\n      let style = {};\n  \n      // Check if the character is part of an answer\n      const qa = jsonData[currentIndex].qas.find(qa => qa.answer_start <= index && index <= qa.answer_end);\n      if (qa) {\n        // Set the highlight color based on the answer's id\n        style.backgroundColor = colors[qa.id % colors.length];\n      }\n  \n      return (\n        <span key={index} style={style}>\n          {char}\n        </span>\n      );\n    });\n  \n    return <p>{spans}</p>;\n  };\n  \n  // Delete a QA\n  const handleDelete = (index) => {\n    const newJsonData = [...jsonData];\n    newJsonData[currentIndex].qas.splice(index, 1);\n    for (let i = 0; i < newJsonData[currentIndex].qas.length; i++) {\n      if (newJsonData[currentIndex].qas[i].id !== i) {\n        newJsonData[currentIndex].qas.forEach((qa, index) => {\n          qa.id = index;\n        });\n        setJsonData(newJsonData);\n        break;\n      }\n    }\n    setJsonData(newJsonData);\n  };\n  // Add a new QA\n  const handleAddQuestion = (e) => {\n    e.preventDefault(); // prevent the form from reloading the page\n  \n    const newJsonData = [...jsonData]; \n    const newId = newJsonData[currentIndex].qas.length; // next available id\n    \n    const newQA = {\n      id: newId,\n      question: newQuestion,\n      answer_start: 0,\n      answer_end: newAnswer.length,\n      answer: newAnswer\n    };\n  \n    // add the new QA to the current context\n    newJsonData[currentIndex].qas.push(newQA);\n  \n    setJsonData(newJsonData); // update the jsonData \n    setNewQuestion(''); // reset form\n    setNewAnswer(''); // reset form\n  };\n\n\n  return (\n    <div>\n    \n      <h1>QA Annotation Tool</h1>\n      <p>Upload the data in JSON format</p>\n      <input type=\"file\" onChange={handleFileSelect} />\n      <button onClick={handleDownloadData} variant=\"contained\">Download Data</button>\n      <div style={{margin: 20}}></div>\n      <form onSubmit={handleAddQuestion}>\n      <label>\n        Question:\n        <input type=\"text\" value={newQuestion} onChange={e => setNewQuestion(e.target.value)} />\n      </label>\n      <label>\n        Answer:\n        <input type=\"text\" value={newAnswer} onChange={e => setNewAnswer(e.target.value)} />\n      </label>\n      <input type=\"submit\" value=\"Add question\" />\n    </form>\n      {jsonData &&  (\n        <div style={{margin: 75}}>\n          \n          <span>{jsonData[currentIndex].title}</span>\n          \n          \n          <p>{highlightAnswers(jsonData)}</p>\n          <ul>\n            {\n            jsonData[currentIndex].qas.map((text, index) => (\n              <li>\n                <p>\n                  { console.log(index)}\n                  Question: {text.question} \n                  <button onClick={() => changeQuestion(text.id, 1)}\n                  style={{ marginLeft: \"15px\" }}\n                  >Edit</button> \n                  <button onClick={() => handleDelete(index)}>Delete</button>\n                </p>\n                \n                <p>\n                  Answer: <span style={{ backgroundColor: colors[index] }}>{text.answer}</span>\n                  <button onClick={() => handleAnswerEdit(text.id, 1)}\n                  style={{ marginLeft: \"15px\" }}\n                  >Edit {text.id}</button>\n                  <button onClick = {() => handleAnswerEdit(text.id, 0)}>Edit by select</button>\n\n                </p> \n              \n              </li>\n            ))\n            }\n          </ul>\n          <button onClick={handlePrevClick}>Previous</button>          \n          <button onClick={handleNextClick}>Next</button>\n            \n        </div>\n      )}\n    </div>\n  );\n}\n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}